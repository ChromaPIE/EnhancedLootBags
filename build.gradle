buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'signing'

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.elootbags.version}"
group= "eu.usrv" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "EnhancedLootBags"

minecraft {
    version = "${config.forge.version}-${config.minecraft.version}"
    runDir = "eclipse"

    replaceIn "src/main/java/eu/usrv/enhancedlootbags/EnhancedLootBags.java"
    replace "GRADLETOKEN_VERSION", project.version.split('-')[1]
}

repositories {
    maven { // GalacticGreg, YAMCore,..
        name 'UsrvDE'
        url "http://jenkins.usrv.eu:8081/nexus/content/repositories/releases/"
    }
}

dependencies {
    compile "eu.usrv:YAMCore:${config.minecraft.version}-${config.yamcore.version}:deobf"
}


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(dependsOn: 'reobf'){
    doLast {
        ant.signjar(
            destDir: jar.destinationDir,
            jar: jar.getArchivePath(),
            alias: findProperty('keyStoreAlias') ?: '',
            keystore: findProperty('keyStore') ?: '',
            storepass: findProperty('keyStorePass') ?: '',
            digestalg: findProperty('signDigestAlg') ?: '',
            tsaurl: findProperty('signTSAurl') ?: '',
            verbose: true
            )
    }
}
